Copyright 2012, 2013 Brown University, Providence, RI.

                         All Rights Reserved

Permission to use, copy, modify, and distribute this software and its
documentation for any purpose other than its incorporation into a
commercial product is hereby granted without fee, provided that the
above copyright notice appear in all copies and that both that
copyright notice and this permission notice appear in supporting
documentation, and that the name of Brown University not be used in
advertising or publicity pertaining to distribution of the software
without specific, written prior permission.

BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY
PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY BE LIABLE FOR
ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
http://compbio.cs.brown.edu/software


Manual for PREGO (Paired-End Reconstruction of Cancer Genome Organization)

Software  that reconstructs a cancer genome as a rearrangement of segments, 
or intervals, from the reference genome using paired end sequencing data.  

If you use this software in your research, please cite:

L. Oesper, A. Ritz, S.J. Aerni, R. Drebin, B.J. Raphael. (2012) 
Reconstructing cancer genomes from paired-end sequencing data. 
BMC Bioinformatics (Proceedings of 2nd Annual RECOMB Satellite 
Workshop on Massively Parallel Sequencing (RECOMB-seq)). 
13(Suppl 6):S10.


Corresponding Authors:
Layla Oesper (layla@cs.brown.edu)
Ben Raphael (braphael@cs.brown.edu)


Version: 1.2
Version Date: May 29, 2013

SUMMARY ==========================================================

This software is for reconstructing a cancer genome as a rearrangement of 
blocks or intervals from a reference genome.  Intended use is for analysis
of genomes that have been sequenced using paired end mapping.

This document contains the following sections:
1) SUMMARY
2) REQUIREMENTS
3) INSTALLATION/COMPILING
4) RUNNING CODE
5) INPUT FILE FORMAT
6) OUTPUT FILE FORMAT



REQUIREMENTS ========================================================
Requires: 
    1. Java 5 (or higher) - http://www.oracle.com/technetwork/java/index.html
    2. CPLEX - http://www-01.ibm.com/software/commerce/optimization/cplex-optimizer/	
    3. *nix OS

Visualization of final graph requires:
    1. yEd - http://www.yworks.com/en/products_yed_about.html
	
Tested with: Java 6, CPLEX 12.3, Linux 2.6.32, yEd 3.10.2


INSTALLATION/COMPILING==================================================

(i) Unpack all contents of the file PREGO_1.0.tar.gz

	tar -xvf PREGO_1.0.tar.gz

(ii) Set an environment variable to point to your CPLEX license file 
     (if necessary) for your installation of CPLEX.

	EXAMPLE (using bash shell):
	export ILOG_LICENSE_FILE=/local/projects/cplex/ilm/site.access.ilm

(iii) Configure for your version of cplex.  You will need to edit the config.txt
      file to point to the correct files for the version of cplex for your system.
	
	Edit the following section of the config.txt file:

	##########################################################################
	# A User MUST first fill out this section before using
	CPLEX_JAR=
	CPLEX_LIBS_DIR=
	############################################################################

	CPLEX_JAR - should point to the full path location of the object "cplex.jar"
	for the version of cplex that you intend to use.
	
	CPLEX_LIBS_DIR - should point to the full path location of the directory
	that contains the static library libcplex*.so for the version of cplex
	that you intend to use.

	EXAMPLE:

	##########################################################################
	# A User MUST first fill out this section before using
	CPLEX_JAR=/local/projects/cplex/cplex/cplex123/x86_64/lib/cplex.jar
	CPLEX_LIBS_DIR=/local/projects/cplex/cplex/cplex123/x86_64/bin/x86-64_sles10_4.1
	############################################################################


(iv) Install the code.  Run the following command

	./install

     This will compile the code (if the config.txt file has been filled
     out) and will create the following executable which can be used to
	 run PREGO.

	bin/runPREGO


RUNNING CODE ==========================================================

After compiling the code, you are set to run.  The script bin/runPREGO
is the main script to use to run code. runPREGO requires two files
as input:

(i) intervalEdge File - contains a partitioning of a genome into intervals
    along with the number of concordant pairs that align entirely within
    each interval.  Specification details are located in the next section.

(ii) variantEdge File - contains a list of potential cancer adjacencies 
     defined as adjacencies of pairs of intervals specified in the
     corresponding intervalEdge file. Specification details are located
     in the next section.

USAGE:

bash runPREGO intervalEdgeFile variantEdgeFile

or

./runPREGO intervalEdgeFile variantEdgeFile


OUTPUT: Output will be two files (by default both files are
	located in the same directory as the original intervalEdgeFile:

	(1) [intervalEdgeFile].results - This file details the inferred
	    edge counts for the different types of edges.

	(2) [intervalEdgeFile].results.graphml - This file may be loaded
	    directly into the yEd program to visualize the interval
	    adjacency graph along with inferred edge counts.


A later section details the specifics of the format of the output files.


EXAMPLE:

cd bin
bash/runPREGO ../example/example.intervalEdges ../example/example.variantEdges

will create the following output files:
../example/example.intervalEdges.results
../example/example.intervalEdges.results.graphml


INPUT FILE FORMAT =======================================================
This code requires two files as input.

(i) intervalEdges File 

    This file contains a partitioning of a genome into intervals along with
    the number of concordant pairs that align entirely within each interval.

    In PREGO version 1.1 we introduced a new file format for this file 
    (however, the old file format should still function).  We only detail
    the new format here.  See a previous release for details of the old
	file format.  This file is a tab delimited list of 6 columns.  
    This list contains one row for every interval in the partition of the 
    reference genome.  
    
    These columns are as follows:

    ID: A unique ID for the interval.  MUST be in the format node1:node2
		where node1 and node2 are unique identifiers for the ends of the
		interval.  For example, and interval on chrm 1 from bp 1-100 may
		use the following interval ID: "c1_1_1:c1_1_100".

    Chr: The chromosome of the interval

    Start: The starting bp of the interval

    End: The ending bp of the interval

    TumorCoverage: The number of reads that align to the interval in 
                   the tumor genome.

    NormalCoverage (optional): The number of reads that align to the interval 
                               in the normal genome.

NOTES:

    We require:
	(1) The intervals be listed in sorted order by position in the genome.

    (2) The intervals must be a PARTITION of a genome or chromosome.
        That is, no overlap is allowed among the intervals (and start
        and end bp must be unique -- If interval i ends a bp n, then
        interval i+1 must start at bp n+1.

    (3) Any header row must begin with #.

---------------------------------------------------------------------------
    	
	EXAMPLE:

	#ID	Chr	Start	End	TumorCoverage	NormalCoverage
	start_1_1:c29808.1_1_189851899	1	1	189851899	12183385	12893966	
	c29808.1_1_189851900:c41639_1_195041387	1	189851900	195041387	687070	419888	
	c41639_1_195041388:c41639_1_195166205	1	195041388	195166205	10657	6758	
	c41639_1_195166206:c59262_1_203799222	1	195166206	203799222	1034230	676746	
	c59262_1_203799223:c85461_1_241167017	1	203799223	241167017	3614536	2963306	
	c85461_1_241167018:c20062.1_1_241435834	1	241167018	241435834	5154	4270	
	c20062.1_1_241435835:end_1_247249719	1	241435835	247249719	514487	438189
	...
	start_23_1:c420070_23_22217384	23	1	22217384	1410135	1693460	
	c420070_23_22217385:end_23_154913754	23	22217385	154913754	8063474	9596683	
	start_24_1:c85461_24_12466954	24	1	12466954	23773	27266	
	c85461_24_12466955:end_24_57772954	24	12466955	57772954	16407	18779

	*** (also see example/example.intervalEdges) ***

----------------------------------------------------------------------------------
	

(ii) variantEdges File

     This file contains the list of potential adjacencies in the cancer genome
     that are not part of the reference genome.  That is, adjacencies that occur
     as the result of a structural variant. Each adjacency is described using 
	 information about a pair of ends of intervals from the corresponding 
	 intervalEdges file.  

	 In PREGO version 1.1 we introduced a new file format for this file 
     (however, the old file format should still function).  We only detail
     the new format here.  See a previous release for details of the old
	 file format.  This file is a tab delimited list of 6 columns.  
     This list contains one row for every interval in the partition of the 
     reference genome. 

	 The columns are as follows:

	 ID1: The ID of the first interval involved in the adjacency.

	 Chr1: The chromosome of the first interval involved in the adjacency.

	 bp1: The basepair of the end of the first interval involved in 
		  the adjacency. 

	 ID2: The ID of the second interval involved in the adjacency.

	 Chr2: The chromosome of the second interval involved in the adjacency.

	 bp2: The basepair of the end of the second interval involved in 
		  the adjacency.


    NOTES:

    (1) Any header row must begin with #.

----------------------------------------------------------------------------------

    EXAMPLE:

	#ID1    Chr1    bp1     ID2     Chr2    bp2
	c420070_8_131832809     8       131832809       c420070_23_22217384     23      22217384
	c420070_8_131832810     8       131832810       c420070_23_22217385     23      22217385
	c354449_7_98610948      7       98610948        c354449_8_41242102      8       41242102
	c3205_3_196693961       3       196693961       c3205_3_196712719       3       196712719
	c518708_19_39306600     19      39306600        c518708_21_27791235     21      27791235
	...

	*** see example/example.variantEdges ***

--------------------------------------------------------------------------------


OUTPUT FILE FORMAT =========================================================
The output from the algorithm for reconstructing cancer genome organization
is twi files.  One that contains information about the different types of edges
in the interval-adjacency graph (see paper reference) constructed from the
input data and the edge multiplicity assigned to those edges by the algorithm.
And a second file that can be loaded into yEd (http://www.yworks.com/en/index.html)
to directly visualize the resulting interval adjacency graph.

(1) [intervalEdgeFile].results

Specifically the output contains information for the following types of 
edges:

(1) interval edges (represent distinct chunks of the genome)
(2) reference edges (represents adjacencies present in the reference genome)
(3) variant edges (represents novel adjacencies present in the cancer genome)


Each of the previous sections of the output file consists of 7 columns that are
separated by tabs.  The columns are as follows:

	 ID1: The ID of the first node involved in the adjacency.

	 Chr1: The chromosome of the first node involved in the adjacency.

	 bp1: The basepair of the end of the first node involved in 
		  the adjacency. 

	 ID2: The ID of the second node involved in the adjacency.

	 Chr2: The chromosome of the second node involved in the adjacency.

	 bp2: The basepair of the end of the second node involved in 
		  the adjacency.

   	 count:	The edge multiplicity assigned to the corresponding edge.


	NOTES:

	(1) The output may also includes a section titled "source edges" if the 
	HANDLE_TELOS parameter is set.  This option is discussed further in the
	OPTIONAL PARAMETERS section.


------------------------------------------------------------------------------
	EXAMPLE:

	interval edges:
	start_1_1       1       1       c29808.1_1_189851899    1       189851899       2
	c29808.1_1_189851900    1       189851900       c41639_1_195041387      1       195041387       2
	c41639_1_195041388      1       195041388       c41639_1_195166205      1       195166205       2
	c41639_1_195166206      1       195166206       c59262_1_203799222      1       203799222       2
	...

	ref edges:
	c29808.1_1_189851899    1       189851899       c29808.1_1_189851900    1       189851900       2
	c41639_1_195041387      1       195041387       c41639_1_195041388      1       195041388       2
	c41639_1_195166205      1       195166205       c41639_1_195166206      1       195166206       2
	c59262_1_203799222      1       203799222       c59262_1_203799223      1       203799223       2
	c85461_1_241167017      1       241167017       c85461_1_241167018      1       241167018       0
	...

	variant edges:
	c420070_8_131832809     8       131832809       c420070_23_22217384     23      22217384        2
	c420070_8_131832810     8       131832810       c420070_23_22217385     23      22217385        2
	c354449_7_98610948      7       98610948        c354449_8_41242102      8       41242102        0
	c3205_3_196693961       3       196693961       c3205_3_196712719       3       196712719       1
	c518708_19_39306600     19      39306600        c518708_21_27791235     21      27791235        0
	...

----------------------------------------------------------------------------------------

OPTIONAL PARAMETERS =========================================================

-----------------------------------------------------------------------------

(1) OUTPUT_PREFIX (String) -- allows the user to specify a different prefix for the output files

	Usage: ./runPREGO <intervalFile> <variantFile> -OUTPUT_PREFIX /the/path/to/save/to/prefix

	Default: intervalFile

-----------------------------------------------------------------------------

(2) TIMEOUT (int) -- allows the user to specify the cplex timeout in seconds

	Usage: ./runPREGO <intervalFile> <variantFile> -TIMEOUT 3600

	Default: 3600 (1 hour)

-----------------------------------------------------------------------------

(3) EXPECTED_COPY (int) -- allows the user to change the expected number of copies of each
						   genomic interval in the normal genome.

	Usage:  ./runPREGO <intervalFile> <variantFile> -EXPECTED_COPY 2

	Default: 2

-----------------------------------------------------------------------------

(4) USE_NORMAL (boolean) -- allows the user to determine whether or not read depth
							over the normal genome should be used.  Set to false if
							the coverage for the normal genome is not included in the
							intervalFile.

	Usage: ./runPREGO <intervalFile> <variantFile> -USE_NORMAL True

	Default: True

-----------------------------------------------------------------------------

(5) HANDLE_TELOS (boolean) -- allows for telomeres to be deleted.  See the original
							  paper for a more thourough description.

	Usage: ./runPREGO <intervalFile> <variantFile> -HANDLE_TELOS False

	Default: False

-----------------------------------------------------------------------------

