// Provides error codes for use in communicating fatal errors up the call stack. Also provides utilities for printing human-readable messages in response to such errors.

#ifndef B2G_ERROR_H
#define B2G_ERROR_H

typedef enum {
  B2GERR_NO_ERROR,
  B2GERR_OUTPUT_PREFIX,
  B2GERR_MAPPING_QUALITY,
  B2GERR_WRITE_CONCORDANT,
  B2GERR_WRITE_LOWQ,
  B2GERR_LARGE_BAM,
  B2GERR_AMBIGUOUS,
  B2GERR_LIBRARY_SEPARATED,
  B2GERR_VERBOSE,
  B2GERR_CUTOFF_LMINLMAX,
  B2GERR_PROPER_LENGTH,
  B2GERR_PLATFORM,
  B2GERR_USE_NUMBER_READS,
  B2GERR_UNKNOWN_OPTION,
  B2GERR_OPTION_WITHOUT_ARGUMENT,
  B2GERR_DEBUG_LEVEL,
  B2GERR_WRITE_SPLITREAD,
  B2GERR_MIN_ALIGNED_PCT,
  B2GERR_GASV_PRO,
  B2GERR_NO_BAM_FILE_SUPPLIED,
  B2GERR_NO_BAM_FILE_FOUND,
  B2GERR_NO_CHROMOSOME_NAMING_FILE_FOUND,
  B2GERR_CHROMOSOME_NAMING_INVALID_FORMAT,
  B2GERR_NO_CUTOFF_FILE_FOUND,
  B2GERR_CUTOFF_FILE_INVALID_FORMAT,
  B2GERR_LIBRARY_NOT_FOUND,
  B2GERR_OUTPUT_DIR_NO_WRITE,
  B2GERR_QNAME_SORTED,
  B2GERR_SPLIT_BY_CHROMOSOME,
  B2GERR_UNSORTED,
  B2GERR_OUT_OF_MEMORY,
  B2GERR_WOULD_OVERWRITE_PREVIOUS,
  B2G_ERR_CANNOT_OPEN_OUTPUT_FILES
  
} b2g_error_t;

extern b2g_error_t B2GERRNO;

void *b2g_malloc(unsigned int);
void b2g_exit(b2g_error_t);
int b2g_error_print(b2g_error_t);

#endif
